
<style>
    #shutterStatus {
        font-size: 18px;
        font-weight: bold;
        color: #AD1980;
        margin-top: 10px;
    }

</style>
<canvas id="sensorChart"></canvas>
<div>
    <h3>Panjur Durumu:</h3>
    <p id="shutterStatus">Yükleniyor...</p>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
    <script>
        const ctx = document.getElementById('sensorChart').getContext('2d');
        const sensorChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [
                    {
                        label: 'Sıcaklık (°C)',
                        data: [],
                        fill:true,
                        borderWidth: 2,
                        backgroundColor: 'rgba(173, 25, 128, 0.3)'
                    },
                    {
                        label: 'Hava Kalitesi',
                        data: [],
                        fill:true,
                        backgroundColor: 'rgba(37, 16, 128, 0.3)'
                    },
                    {
                        label: 'Işık',
                        data: [],
                        fill:true,
                        backgroundColor: 'lightskyblue'
                    }

                ]
            },
                 options: {
            scales: {
                y: { beginAtZero: true }
            },
            plugins: {
                datalabels: {
                    color: '#000',
                    anchor: 'end',
                    align: 'top',
                    font: {
                        weight: 'bold'
                    },
                    formatter: function (value) {
                        return value; // Değeri direkt yaz
                    }
                }
            }
        },
        plugins: [ChartDataLabels]
        });

        const MAX_DATA_COUNT = 10;
         const baseApiUrl = '@ViewBag.baseApiUrl';
                async function fetchSensorData() {
                   
            const response = await fetch(`${baseApiUrl}/sensor/latest`);

            if (!response.ok) {
                alert('API çağrısı sırasında hata oluştu: ' + response.statusText);
                return;
            }

            const data = await response.json();

            const now = new Date().toLocaleTimeString();

            sensorChart.data.labels.push(now);
            sensorChart.data.datasets[0].data.push(data.temperature);
            sensorChart.data.datasets[1].data.push(data.airQuality);
            sensorChart.data.datasets[2].data.push(data.lux);

                if (sensorChart.data.labels.length > MAX_DATA_COUNT) {
            sensorChart.data.labels.shift(); // en eski zamanı kaldır
            sensorChart.data.datasets.forEach(dataset => dataset.data.shift());
        }

            sensorChart.update();
        }

        async function fetchShutterStatus() {
            const response = await fetch(`${baseApiUrl}/Sensor/shutter/status`);

            if (!response.ok) {
                console.error('Panjur durumu alınırken hata oluştu:', response.statusText);
                return;
            }

            const data = await response.json();

            // Panjur durumu güncelle
            document.getElementById("shutterStatus").innerText = `Durum: ${data.status}`;
        }

        // 5 saniyede bir verileri güncelle
        setInterval(fetchSensorData, 5000);
        setInterval(fetchShutterStatus, 5000);

        // Sayfa ilk yüklendiğinde bir kere çalıştır
        fetchSensorData();
        fetchShutterStatus();

    </script>
}
